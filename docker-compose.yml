version: '3'
services:
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
  redis:
    image: 'redis:latest'
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'


  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    volumes:
      - /app/node_modules # inside the container dont try to overwrite or redirect access to it.
      - ./server:/app
    environment:
      #add array of environment variables specified by a single -
      #process.env in keys.js under server are environment variables
      #runtime = only when the container is started up.
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432

  client:
    build:
     dockerfile: Dockerfile.dev
     context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app #everything inside the client should be shared with app.

  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - WDS_SOCKET_PORT=0
      - REDIS_HOST=redis
      - REDIS_PORT=6379    

# React server is used the index.html and main.js
# Express server is used to handle request to know about all the values submitted and list of current values calculated by the worked process.
# Express server to handle API requests.
# Nginx is used to determine which server should the request be sent to.
# If the request has /api/, send to api i.e. express server. Everything else i.e. to /, send to client i.e. React server.




